// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/api/server/generated"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  profile_image String?
  points        BigInt       @default(0)
  unionId       String?
  doneTime      DateTime?
  union         Union?    @relation(fields: [unionId], references: [id], onDelete: SetNull)
  followedBy    User[]    @relation("UserFollows")
  following     User[]    @relation("UserFollows")
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([unionId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Union {
  id     String @id @default(cuid())
  name   String @unique
  union_image String?
  points BigInt @default(0)
  user   User[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Zerosum {
  id String @id @default(cuid())
  numberOne Int
  numberTwo Int
  numberThree Int
  operatorOne String
  operatorTwo String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model TrasferTransaction {
  id String @id @default(cuid())
  type String @default("transfer")
  sender String
  senderName String
  receiver String
  receiverName String
  amount Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model DonationTransaction {
  id String @id @default(cuid())
  type String @default("donation")
  sender String
  senderName String
  unionId String
  receiverName String
  amount Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model RequestFriendTransaction {
  id String @id @default(cuid())
  type String @default("request")
  sender String
  senderName String
  receiver String
  receiverName String
  status String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}